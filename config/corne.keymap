/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_combo {
            bindings = <&caps_word>;
            key-positions = <24 35>;
        };

        to_game_layer {
            bindings = <&tog 3>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39>;    // <---[[right-hand keys]]
        };

        rh_pht: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;    // <---[[left-hand keys]]
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESC         &kp Q                 &kp W                   &kp E               &kp R               &kp T               &kp Y      &kp U                &kp I                &kp O                    &kp P                     &kp BSPC
&kp TAB         &lh_pht LEFT_SHIFT A  &lh_pht LEFT_CONTROL S  &lh_pht LEFT_ALT D  &lh_pht LEFT_GUI F  &kp G               &kp H      &rh_pht RIGHT_GUI J  &rh_pht RIGHT_ALT K  &rh_pht RIGHT_CONTROL L  &rh_pht RIGHT_SHIFT SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z                 &kp X                   &kp C               &kp V               &kp B               &kp N      &kp M                &kp COMMA            &kp DOT                  &kp FSLH                  &kp RIGHT_SHIFT
                                                              &kp LEFT_ALT        &mo 1               &mt LEFT_GUI RET    &kp SPACE  &mo 2                &kp RIGHT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp NUMBER_6      &kp N7             &kp N8                &kp N9                 &kp N0        &kp DELETE
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UP_ARROW  &none
&soft_off     &trans        &trans        &bt BT_CLR    &trans        &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH         &kp LEFT               &kp DOWN      &kp RIGHT
                                          &trans        &mo 1         &trans          &trans            &mo 2              &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp GRAVE       &kp EXCL          &kp AT      &kp HASH    &kp DLLR           &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK       &kp LPAR  &kp RPAR   &kp BSPC
&kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp GRAVE  &kp MINUS  &kp UNDERSCORE  &kp PLUS  &kp EQUAL  &none
&trans          &trans            &trans      &trans      &trans             &trans             &kp TILDE  &none      &none           &none     &none      &none
                                              &trans      &mo 1              &trans             &trans     &mo 2      &trans
            >;
        };

        game_layer {
            display-name = "Game";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E    &kp R  &kp T        &kp Y   &kp U  &kp I      &kp O    &kp P     &trans
&kp TAB    &kp A  &kp S  &kp D    &kp F  &kp G        &kp H   &kp J  &kp K      &kp L    &kp SEMI  &trans
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V  &kp B        &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
                         &kp RET  &mo 1  &kp SPACE    &trans  &mo 2  &trans
            >;
        };
    };
};
